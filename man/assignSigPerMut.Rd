% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assignSigPerMut.R
\name{assignSigPerMut}
\alias{assignSigPerMut}
\title{Assign a mutational signature to each mutation in a vcf or bed-like dataframe}
\usage{
assignSigPerMut(
  vcf.file = NULL,
  df = NULL,
  mode = "snv",
  output = "df",
  signature.profiles = NULL,
  args.extract.sigs = list(vcf.filter = "PASS"),
  fit.method = "strict",
  args.fit = NULL,
  verbose = T
)
}
\arguments{
\item{vcf.file}{Path to the vcf file}

\item{df}{A dataframe containing the columns: chrom, pos, ref, alt. Alternative input option to
vcf.file}

\item{mode}{Can be 'snv','sbs','indel' or 'dbs'. `mode` defines which `extractSigs*()` function
to use. Additionally, if `signature.profiles` is unspecified, the correct signature profile
matrix will be automatically chosen}

\item{output}{Can be 'df' (a dataframe with chrom, pos, ref, alt, context, assigned_sig, sig_prob),
'df.compact' (a dataframe with context, assigned_sig, sig_prob), or 'vector' (a vector whose
names are assigned_sig, and values are sig_prob).}

\item{signature.profiles}{A matrix containing the mutational signature profiles, where rows are
the mutation contexts and the columns are the mutational signatures.}

\item{args.extract.sigs}{Args that can be passed to the `extractSigs*()` functions}

\item{fit.method}{Can be 'lsq' or 'strict'. Method for fitting context counts to signature
profiles. See documentation for `fitToSignatures()` for more details}

\item{args.fit}{Args that can be passed to the `fitToSignatures*()` functions}

\item{verbose}{Print progress messages?}
}
\value{
See `output`
}
\description{
This function performs the following steps to assign a signature to each mutation
in a vcf or bed-like dataframe:
(1) Extract contexts and count occurrences
(2) Calculate signature contributions by fitting contexts counts to reference signature profiles
(3) Multiply each reference signature profile by the signature contribution vector. This gives
the probability of each context to be assigned to a signature
(4) Assign each context a signature based on the maximum probability signature
(5) Assign each mutation a signature based on its context
}
