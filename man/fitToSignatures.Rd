% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitToSignatures.R
\name{fitToSignatures}
\alias{fitToSignatures}
\alias{fitToSignaturesFast}
\alias{fitToSignaturesFastStrict}
\alias{fitToSignatures.default}
\alias{fitToSignatures.matrix}
\alias{fitToSignatures.data.frame}
\title{Linear least-squares (non-negative) fitting}
\usage{
fitToSignatures(mut.context.counts, ...)

fitToSignaturesFast(mut.context.counts, signature.profiles, verbose = F)

fitToSignaturesFastStrict(
  mut.context.counts,
  signature.profiles,
  max.delta = 0.004,
  detailed.output = F,
  verbose = F
)

\method{fitToSignatures}{default}(
  mut.context.counts,
  signature.profiles,
  method = "lsq",
  max.delta = 0.01,
  verbose = F
)

\method{fitToSignatures}{matrix}(mut.context.counts, signature.profiles, verbose = F, ...)

\method{fitToSignatures}{data.frame}(mut.context.counts, signature.profiles, verbose = F, ...)
}
\arguments{
\item{signature.profiles}{A matrix containing the mutational signature profiles, where rows are
the mutation contexts and the columns are the mutational signatures.}

\item{verbose}{Show progress messages?}

\item{max.delta}{See description.}

\item{detailed.output}{Only for fitToSignaturesFastStrict(). Also return results from the
iterative fitting? Includes: cosine similarity between the original and reconstructed mutation
context; signatures removed at each iteration. Useful for plotting fitting performance.}

\item{mut.contexts}{A vector of mutation contexts for fitting}
}
\value{
If vector is provided to mut.contexts, a vector returned containing the the absolute
contribution of each signature (i.e. the number of mutations contributing to each mutational
signature). If a matrix is provided, a matrix of absolute contributions is returned
}
\description{
Calculate the contribution of each mutational signature in a sample, given a vector
of mutation contexts. This is done by least-squares fitting, i.e. find a linear non-negative
combination of mutation signatures that optimally reconstructs the mutation matrix

fitToSignatures() is a slow R implementation of least-squares fitting based on the lsqnonneg()
function in the pracma from the R package.

fitToSignaturesFast() is a wrapper for NNLM::nnlm(), a least-squares fitting function implemented
in C++.

Only performing least-squares fitting is however potentially prone to overfitting.
fitToSignaturesFastStrict() tries to solve this problem by performing an initial fit,
then iteratively removing the signature with the lowest contribution and with fitting then
repeated. Each time the cosine distance between the original and reconstructed mutation context
profile is calculated. Iterations are stopped when cosine distance > max.delta. The second-last
set of signatures is then returned.
}
